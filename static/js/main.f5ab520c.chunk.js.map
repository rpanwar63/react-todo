{"version":3,"sources":["components/Header.js","components/AddTodo.js","components/TodoItem.js","components/ShowTodo.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","deleteAllCompletedTodos","bind","assertThisInitialized","saveToLocal","key","_this2","todo","slice","reverse","map","item","checked","deleteTodo","local","localStorage","setItem","JSON","stringify","react_default","a","createElement","className","onClick","Component","AddTodo","state","newTodo","createTodo","handleClick","e","setState","target","value","preventDefault","addTodoItem","onSubmit","id","type","name","placeholder","onChange","React","TodoItem","handleCheck","handleRemove","checkTodo","ShowTodo","showTodoList","src_components_TodoItem","App","todoList","lastKey","todos","parse","getItem","val","concat","index","findIndex","obj","splice","src_components_Header","src_components_AddTodo","length","src_components_ShowTodo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8UA8BeA,qBA1Bb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,wBAA0BP,EAAKO,wBAAwBC,KAA7BP,OAAAQ,EAAA,EAAAR,CAAAD,IAC/BA,EAAKU,YAAcV,EAAKU,YAAYF,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHFA,uFAKKW,GAAK,IAAAC,EAAAT,KAC3BA,KAAKJ,MAAMc,KAAKC,MAAM,GAAGC,UAAUC,IAAI,SAAAC,GAAI,OAAIA,EAAKC,SAClDN,EAAKb,MAAMoB,WAAWF,EAAKN,6CAK7B,IAAMS,EAAQjB,KAAKJ,MAAMc,KACzBQ,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,qCAI3C,OACEK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,QAAS1B,KAAKO,cAC1Ce,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBC,QAAS1B,KAAKI,kCAtBrCuB,cCkCNC,qBAjCX,SAAAA,EAAYhC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACf/B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMJ,KACDiC,MAAQ,CACTC,QAAS,IAEbjC,EAAKkC,WAAalC,EAAKkC,WAAW1B,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAClBA,EAAKmC,YAAcnC,EAAKmC,YAAY3B,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IANJA,0EAQRoC,GACPjC,KAAKkC,SAAS,CAACJ,QAASG,EAAEE,OAAOC,4CAEzBH,GACRA,EAAEI,iBACFrC,KAAKJ,MAAM0C,YAAYtC,KAAK6B,MAAMC,SAClC9B,KAAKkC,SAAS,CAACJ,QAAS,sCAGxB,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,QAAMe,SAAUvC,KAAKgC,aACrBV,EAAAC,EAAAC,cAAA,SACIgB,GAAG,eACHC,KAAK,OACLC,KAAK,UACLC,YAAY,gBACZP,MAAOpC,KAAK6B,MAAMC,QAClBc,SAAU5C,KAAK+B,cAEnBT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcC,QAAS1B,KAAKgC,sBA7BnCa,IAAMlB,YCsBbmB,2BArBX,SAAAA,EAAYlD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACfjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMJ,KACDmD,YAAclD,EAAKkD,YAAY1C,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAKmD,aAAenD,EAAKmD,aAAa3C,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHLA,6EAMfG,KAAKJ,MAAMqD,UAAUjD,KAAKJ,MAAMc,KAAKF,IAAKR,KAAKJ,MAAMc,KAAKK,QAASf,KAAKJ,MAAMc,KAAK0B,8CAGnFpC,KAAKJ,MAAMoB,WAAWhB,KAAKJ,MAAMc,KAAKF,sCAGtC,OACIc,EAAAC,EAAAC,cAAA,OAAMC,UAAWzB,KAAKJ,MAAMc,KAAKK,QAAU,mBAAqB,YAC5DO,EAAAC,EAAAC,cAAA,QAAME,QAAS1B,KAAK+C,aAAc/C,KAAKJ,MAAMc,KAAK0B,OACjDpC,KAAKJ,MAAMc,KAAKK,SAAWO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,QAAS1B,KAAK+C,cACtEzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,QAAS1B,KAAKgD,uBAjBnCH,IAAMlB,YCWduB,mLATF,IAAArD,EAAAG,KACCmD,EAAenD,KAAKJ,MAAMc,KAAKG,IAAI,SAAAC,GAAI,OAAIQ,EAAAC,EAAAC,cAAC4B,EAAD,CAAU5C,IAAKM,EAAKN,IAAKE,KAAMI,EAAMmC,UAAWpD,EAAKD,MAAMqD,UAAWjC,WAAYnB,EAAKD,MAAMoB,eAC9I,OACIM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACV0B,UALMN,IAAMlB,WC8Dd0B,qBA5Db,SAAAA,IAAc,IAAAxD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqD,IACZxD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuD,GAAAlD,KAAAH,QACK6B,MAAQ,CACTyB,SAAU,GACVC,QAAQ,GAEZ1D,EAAKyC,YAAczC,EAAKyC,YAAYjC,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAKoD,UAAYpD,EAAKoD,UAAU5C,KAAfP,OAAAQ,EAAA,EAAAR,CAAAD,IACjBA,EAAKmB,WAAanB,EAAKmB,WAAWX,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IARNA,mFAYZ,IAAM2D,EAAQpC,KAAKqC,MAAOvC,aAAawC,QAAS,UAChD1D,KAAKkC,SAAU,CAAEoB,SAAUE,wCAGjBG,GACV,IAAInB,EAAKxC,KAAK6B,MAAM0B,QAAU,EAE1BzB,EADM,CAAC,CAACtB,IAAOgC,EAAIJ,MAASuB,EAAK5C,SAAW,IAC9B6C,OAAO5D,KAAK6B,MAAMyB,UACpCtD,KAAKkC,SAAS,CACZoB,SAAWxB,EACXyB,QAASf,sCAIHhC,EAAIO,EAAQqB,GACpB,IAAIyB,EAAQ7D,KAAK6B,MAAMyB,SAASQ,UAAU,SAAAhD,GAAI,OAAIA,EAAKN,MAAQA,IAE3DuD,EAAM,CAACvD,IAAOA,EAAK4B,MAASA,EAAOrB,SAD1BA,GAEbf,KAAKkC,SAAS,CACZoB,SAAWtD,KAAK6B,MAAMyB,SAASU,OAAOH,EAAM,KAE9C,IAAI/B,EAAU9B,KAAK6B,MAAMyB,SACzBxB,EAAQkC,OAAOH,EAAM,EAAEE,GACvB/D,KAAKkC,SAAS,CACZoB,SAAWxB,uCAIJtB,GACT,IAAIqD,EAAQ7D,KAAK6B,MAAMyB,SAASQ,UAAU,SAAAhD,GAAI,OAAIA,EAAKN,MAAQA,IAC3DsB,EAAU9B,KAAK6B,MAAMyB,SACzBxB,EAAQkC,OAAOH,EAAM,GACrB7D,KAAKkC,SAAS,CACZoB,SAAWxB,qCAKb,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACyC,EAAD,CAAQvD,KAAMV,KAAK6B,MAAMyB,SAAUtC,WAAYhB,KAAKgB,aACpDM,EAAAC,EAAAC,cAAC0C,EAAD,CAAS5B,YAAatC,KAAKsC,cAC1BtC,KAAK6B,MAAMyB,SAASa,OAAS7C,EAAAC,EAAAC,cAAC4C,EAAD,CAAU1D,KAAMV,KAAK6B,MAAMyB,SAAUL,UAAWjD,KAAKiD,UAAWjC,WAAYhB,KAAKgB,aAAgBM,EAAAC,EAAAC,cAAA,6BAvDrHqB,IAAMlB,YCOJ0C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f5ab520c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.deleteAllCompletedTodos = this.deleteAllCompletedTodos.bind(this)\r\n    this.saveToLocal = this.saveToLocal.bind(this)\r\n  }\r\n  deleteAllCompletedTodos(key) {\r\n    this.props.todo.slice(0).reverse().map(item => item.checked && \r\n      this.props.deleteTodo(item.key)\r\n    )\r\n  }\r\n  \r\n  saveToLocal() {\r\n    const local = this.props.todo;\r\n    localStorage.setItem(\"local\", JSON.stringify(local));\r\n  }\r\n\r\n    render() {\r\n      return (\r\n        <nav>\r\n            <span>Get Things Done.</span>\r\n            <i className=\"far fa-heart\" onClick={this.saveToLocal}></i>\r\n            <i className=\"far fa-trash-alt\" onClick={this.deleteAllCompletedTodos}></i>\r\n        </nav>\r\n      )\r\n    }\r\n  }\r\nexport default Header","import React from 'react'\r\nimport './AddTodo.css'\r\n\r\nclass AddTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newTodo: ''\r\n        }\r\n        this.createTodo = this.createTodo.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    createTodo(e) {\r\n        this.setState({newTodo: e.target.value})\r\n    }\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        this.props.addTodoItem(this.state.newTodo);\r\n        this.setState({newTodo: \"\"});\r\n      }\r\n    render() {\r\n        return (\r\n            <div className=\"inputContainer\">\r\n                <form onSubmit={this.handleClick}>\r\n                <input \r\n                    id=\"newTodoInput\"\r\n                    type=\"text\" \r\n                    name=\"addTodo\" \r\n                    placeholder=\"Add new To Do\" \r\n                    value={this.state.newTodo}\r\n                    onChange={this.createTodo}\r\n                /></form>\r\n                <i className=\"fas fa-plus\" onClick={this.handleClick}></i>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddTodo","import React from 'react'\r\nimport './TodoItem.css'\r\n\r\nclass TodoItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCheck = this.handleCheck.bind(this)\r\n        this.handleRemove = this.handleRemove.bind(this)\r\n    }\r\n    handleCheck() {\r\n        this.props.checkTodo(this.props.todo.key, this.props.todo.checked, this.props.todo.value)\r\n    }\r\n    handleRemove() {\r\n        this.props.deleteTodo(this.props.todo.key)\r\n    }\r\n    render() {\r\n        return (\r\n            <div  className={this.props.todo.checked ? \"todoitem checked\" : \"todoitem\"}>\r\n                <span onClick={this.handleCheck}>{this.props.todo.value}</span>\r\n                {this.props.todo.checked && <i className=\"fas fa-check\" onClick={this.handleCheck}></i>}\r\n                <i className=\"fas fa-times\" onClick={this.handleRemove}></i>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoItem","import React from 'react'\r\nimport './ShowTodo.css'\r\nimport TodoItem from './TodoItem'\r\n\r\nclass ShowTodo extends React.Component {\r\n    render() {\r\n        const showTodoList = this.props.todo.map(item => <TodoItem key={item.key} todo={item} checkTodo={this.props.checkTodo} deleteTodo={this.props.deleteTodo} />)\r\n        return (\r\n            <div className=\"todoContainer\">\r\n                {showTodoList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ShowTodo","import React from 'react';\nimport Header from './components/Header'\nimport AddTodo from './components/AddTodo'\nimport ShowTodo from './components/ShowTodo'\nimport './App.css'\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n        todoList: [],\n        lastKey:0\n    }\n    this.addTodoItem = this.addTodoItem.bind(this)\n    this.checkTodo = this.checkTodo.bind(this)\n    this.deleteTodo = this.deleteTodo.bind(this)\n  }\n\n  componentDidMount() {\n    const todos = JSON.parse( localStorage.getItem( \"local\" ) );\n    this.setState( { todoList: todos } );\n  }\n\n  addTodoItem(val) {\n    let id = this.state.lastKey + 1\n    let obj = [{\"key\": id, \"value\": val, \"checked\": false}]\n    let newTodo = obj.concat(this.state.todoList)\n    this.setState({\n      todoList : newTodo,\n      lastKey: id\n    })\n  }\n  \n  checkTodo(key,checked,value) {\n    let index = this.state.todoList.findIndex(item => item.key === key)\n    let check = !checked\n    let obj = {\"key\": key, \"value\": value, \"checked\": check}\n    this.setState({\n      todoList : this.state.todoList.splice(index,1)\n    })\n    let newTodo = this.state.todoList\n    newTodo.splice(index,0,obj)\n    this.setState({\n      todoList : newTodo\n    })\n  }\n  \n  deleteTodo(key) {\n    let index = this.state.todoList.findIndex(item => item.key === key)\n    let newTodo = this.state.todoList\n    newTodo.splice(index,1)\n    this.setState({\n      todoList : newTodo\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <Header todo={this.state.todoList} deleteTodo={this.deleteTodo}/>\n        <AddTodo addTodoItem={this.addTodoItem}/>\n        {this.state.todoList.length ? <ShowTodo todo={this.state.todoList} checkTodo={this.checkTodo} deleteTodo={this.deleteTodo}/> : <p>No todos</p>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}